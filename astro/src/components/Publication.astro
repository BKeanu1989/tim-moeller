---
import { Picture, Image } from "astro:assets";
import type { ContentEntryMap } from "astro:content";
import type { ValidContentEntrySlug } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
console.log("import meta",import.meta)
type Publication = {
  auhors: string[];
  image: string;
  title: string;
  year: number;
};

interface Props {
  // authors: string[]; // array of file names of authors
  input: CollectionEntry<"publications">;
}

const { input,  } = Astro.props;
const text = input.body;
const { year, image, title, imageAlt, authors} = input.data;

// console.log("atuhors", authors)

const authorData = []

for await (const d of authors) {
  const res = await getEntry("authors", d)

  authorData.push(res)
}

const foo = authorData.map((x) => {
  // @ts-ignore
  // x.test = "@assets" + 
})

// authors.forEach((x) => {
//   await 
// })
// import someImage from image + "";
---

<article class="publication relative bg-c-bg-grey min-h-96 min-w-fit text-black">
  <div class="flex flex-row relative">
    <span class="publication--year top-2 right-2 absolute">
      {year}
    </span>
    <Picture src={image} alt="st" class="" />
    <div class="flex flex-col">
      <h1 class="inline text-2xl publication-title">{title}</h1>
      <div class="publication-authors">
        <ul class="flex gap-2">
          {
            authorData.map((author) => (

              author && 
              <li>
                <Image src={author.data.image} alt={"author " + author.data.name} class="w-10 h-10 rounded-full" />
              </li>
            ))
          }
        </ul>
        <div class="author-names">
          { authorData.map((author) => (
            author &&
              <span class="text-slate-700 ml-1">({author.data.name})</span>

          ))}
        </div>
      </div>
    </div>
  </div>
  <div class="flex">
    <Fragment class:list={"publication-te text-center"} set:html={text} />
  </div>
</article>
