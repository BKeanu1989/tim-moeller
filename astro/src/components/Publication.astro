---
import { Picture, Image } from "astro:assets";
import type { ContentEntryMap } from "astro:content";
import type { ValidContentEntrySlug } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

import {buildI18nLink} from "@utils/utils"

import { getLangFromUrl, useTranslations } from "src/i18n/utils";
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

type Publication = {
  auhors: string[];
  image: string;
  title: string;
  year: number;
};

interface Props {
  input: CollectionEntry<"publications">;
}

const { input } = Astro.props;
const text = input.body;
const { year, image, title, imageAlt, authors, tags } = input.data;

const authorData = []

for await (const d of authors) {
  const res = await getEntry("authors", d)
  authorData.push(res)
}

---

<article class="publication relative bg-gray-900/50 backdrop-blur-sm rounded-xl overflow-hidden group">
  <div class="flex flex-col md:flex-row gap-6 p-6">
    <!-- Image Section -->
    <div class="md:w-1/3 overflow-hidden rounded-lg">
      <div class="aspect-[4/3] relative overflow-hidden">
        <Picture 
          src={image} 
          alt={imageAlt || title}
          class="object-cover w-full h-full transform transition-transform duration-500 group-hover:scale-105"
        />
        <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
      </div>
    </div>

    <!-- Content Section -->
    <div class="md:w-2/3 flex flex-col gap-4">
      <!-- Title and Year -->
      <div class="flex items-start justify-between gap-4">
        <h2 class="text-2xl font-light text-white group-hover:text-cyan-400 transition-colors duration-300">
          {title}
        </h2>
        <span class="text-sm text-gray-400 whitespace-nowrap">
          {year}
        </span>
      </div>

      <!-- Authors -->
      <div class="flex flex-col gap-3">
        <ul class="flex -space-x-2">
          {
            authorData.map((author) => (
              author && 
              <li class="relative group/author">
                <Image 
                  src={author.data.image} 
                  alt={`Author: ${author.data.name}`} 
                  class="w-10 h-10 rounded-full border-2 border-gray-800 transition-transform duration-300 group-hover/author:scale-110 group-hover/author:z-10"
                />
                <span class="absolute -bottom-6 left-1/2 -translate-x-1/2 bg-gray-800 text-white text-xs px-2 py-1 rounded opacity-0 group-hover/author:opacity-100 transition-opacity duration-300 whitespace-nowrap">
                  {author.data.name}
                </span>
              </li>
            ))
          }
        </ul>
      </div>
      <div class="tags">
          {
            tags?.map((tag) => (
              tag && 
              <span class="tag font-thin text-xs border rounded border-sky-100 px-1 py-1 bg-stone-700/50">
                {tag}
              </span>
            ))
          }
      </div>

      <!-- Abstract -->
      <div class="text-gray-300 leading-relaxed">
        <Fragment set:html={text} />
      </div>

      <!-- Read More Button -->
      <a 
      href={`/publications/${input.id}`}
        class="inline-flex items-center gap-2 px-4 py-2 mt-2 text-sm text-white bg-cyan-500/10 hover:bg-cyan-500/20 rounded-lg transition-colors duration-300 w-fit group/button"
      >
        {t("misc.read_more")}
        <svg 
          xmlns="http://www.w3.org/2000/svg" 
          class="h-4 w-4 transform transition-transform duration-300 group-hover/button:translate-x-1" 
          fill="none" 
          viewBox="0 0 24 24" 
          stroke="currentColor"
        >
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </a>
            <a 
      href={buildI18nLink(input)}

        class="inline-flex items-center gap-2 px-4 py-2 mt-2 text-sm text-white bg-cyan-500/10 hover:bg-cyan-500/20 rounded-lg transition-colors duration-300 w-fit group/button"
      >
        {t("misc.read_more")} - new
        <svg 
          xmlns="http://www.w3.org/2000/svg" 
          class="h-4 w-4 transform transition-transform duration-300 group-hover/button:translate-x-1" 
          fill="none" 
          viewBox="0 0 24 24" 
          stroke="currentColor"
        >
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </a>
    </div>
  </div>
</article>

<style>
  .publication {
    box-shadow: 
      0 0 20px rgba(0, 0, 0, 0.2),
      0 0 40px rgba(0, 194, 203, 0.05);
    transition: all 0.3s ease;
  }

  .publication:hover {
    /* transform: translateY(-2px);
    box-shadow: 
      0 0 30px rgba(0, 0, 0, 0.3),
      0 0 60px rgba(0, 194, 203, 0.1); */
  }

  /* Smooth transitions */
  .publication * {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
</style>
