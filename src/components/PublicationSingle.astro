---
import { Picture, Image } from 'astro:assets'
import type { ContentEntryMap } from 'astro:content'
import type { ValidContentEntrySlug } from 'astro:content'
import type { CollectionEntry } from 'astro:content'
import { getEntry } from 'astro:content'

import { getLangFromUrl, useTranslations } from 'src/i18n/utils'
const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)

type Publication = {
	auhors: string[]
	image: string
	title: string
	year: number
}

interface Props {
	input: CollectionEntry<'publications'>
}

const { input } = Astro.props
const text = input.body
const { year, image, title, imageAlt, authors, tags } = input.data

const authorData = []

for await (const d of authors) {
	const res = await getEntry('authors', d)
	authorData.push(res)
}
---

<article
	class="publication-single group relative mx-auto w-full overflow-hidden rounded-xl bg-gray-900/50 backdrop-blur-sm sm:w-2/3"
>
	<div class="flex flex-col gap-6 p-6">
		<!-- Image Section -->
		<div class="relative mx-auto overflow-hidden rounded-lg md:w-2/3">
			<div class="relative aspect-[4/3] overflow-hidden">
				<Picture
					src={image}
					alt={imageAlt || title}
					class="h-full w-full transform object-cover transition-transform duration-500 group-hover:scale-105"
				/>
				<div
					class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 transition-opacity duration-300 group-hover:opacity-100"
				>
				</div>
			</div>
			<span class="absolute right-4 top-2 whitespace-nowrap text-sm text-gray-100">
				{year}
			</span>
		</div>

		<!-- Content Section -->
		<div class="mx-auto flex flex-col gap-4 md:w-2/3">
			<!-- Title and Year -->
			<div class="flex items-start justify-between gap-4">
				<h2 class="text-2xl font-light text-white transition-colors duration-300">
					{title}
				</h2>
			</div>

			<!-- Authors -->
			<div class="flex flex-col gap-3">
				<ul class="flex -space-x-2">
					{
						authorData.map(
							(author) =>
								author && (
									<li class="group/author relative">
										<Image
											src={author.data.image}
											alt={`Author: ${author.data.name}`}
											class="h-10 w-10 rounded-full border-2 border-gray-800 transition-transform duration-300 group-hover/author:z-10 group-hover/author:scale-110"
										/>
										<span class="absolute -bottom-6 left-1/2 -translate-x-1/2 whitespace-nowrap rounded bg-gray-800 px-2 py-1 text-xs text-white opacity-0 transition-opacity duration-300 group-hover/author:opacity-100">
											{author.data.name}
										</span>
									</li>
								)
						)
					}
				</ul>
			</div>
			<div class="tags flex flex-wrap gap-2 text-white">
				{
					tags?.map(
						(tag) =>
							tag && (
								<span class="tag rounded border border-sky-100 bg-stone-700/50 px-1 py-1 text-xs font-thin">
									{tag}
								</span>
							)
					)
				}
			</div>

			<!-- Abstract -->
			<div class="leading-relaxed text-gray-300">
				<Fragment set:html={text} />
			</div>
		</div>
	</div>
</article>

<style>
	.publication {
		box-shadow:
			0 0 20px rgba(0, 0, 0, 0.2),
			0 0 40px rgba(0, 194, 203, 0.05);
		transition: all 0.3s ease;
	}

	.publication:hover {
		/* transform: translateY(-2px);
    box-shadow: 
      0 0 30px rgba(0, 0, 0, 0.3),
      0 0 60px rgba(0, 194, 203, 0.1); */
	}

	/* Smooth transitions */
	.publication * {
		transition-property:
			color, background-color, border-color, text-decoration-color, fill, stroke, opacity,
			box-shadow, transform, filter, backdrop-filter;
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	}
</style>
